获取下一整点。如现在是4：53 下一整点是5点。如果现在是5点，下一整点为6点。

	public static Date  getNextSharpHour()
	{
		Calendar   calendar=new GregorianCalendar(); 
		Date currDate = new Date();
		currDate = new Date(currDate.getYear(),currDate.getMonth(),currDate.getDate(),currDate.getHours(),0,0);
		calendar.setTime(currDate); 
		calendar.add(calendar.HOUR, 1);
		return calendar.getTime();
	}


     
	 private static Connection conn=null;

	    //对外提供一个方法来获取数据库连接
	    public static Connection getConnection(){
	    	if(conn==null)
	    	{
	    		try {
		            //1.加载驱动程序
		            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
		            //2.获得数据库的连接
		            conn=(Connection)DriverManager.getConnection(URL,USER,PASSWORD);
		        } catch (ClassNotFoundException e) {
		            e.printStackTrace();
		        } catch (SQLException e) {
		            e.printStackTrace();
		        }
	    	}
	        return conn;
	    }
	    
	    public static ResultSet query(String sql) throws SQLException
	    {
	    	getConnection();
	    	Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	        ResultSet rs = stmt.executeQuery(sql);
	        return rs;
	    }
	    
	    public static int update(String sql) throws SQLException
	    {
	    	getConnection();
	    	Statement stmt = conn.createStatement();
	        int rowcnt = stmt.executeUpdate(sql);
	        return rowcnt;
	    }
	    




	public static void writeFile(String filePath,String data) throws IOException
	{
		File file1 = new File(filePath);
        file1.createNewFile();
//        FileWriter writer = new FileWriter(filePath);
        BufferedWriter writer = new BufferedWriter (new OutputStreamWriter (new FileOutputStream (filePath,false),"UTF-8"));
        writer.write(data);
        writer.flush();
        writer.close();
	}
	
	public static String getUUID()
	{
		return UUID.randomUUID().toString().replace("-", "").toLowerCase();
	}
	
	public static String formatDate(String format)
	{
		SimpleDateFormat format0 = new SimpleDateFormat(format);//"yyyy-MM-dd HH:mm:ss"
	    String time = format0.format(new java.util.Date());
	    return time;
	}
	
	public static String formatDateDefault()
	{
		return formatDate("yyyy-MM-dd HH:mm:ss");
	}
     
	public static String formatDateyyyyMMdd()
	{
		return formatDate("yyyyMMdd");
	}
	
	public static String formatDateHHmmss()
	{
		return formatDate("HHmmss");
	}
	






SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
Calendar c = Calendar.getInstance();
System.out.println("当前日期:"+sf.format(c.getTime()));
c.add(Calendar.DAY_OF_MONTH, 1);
System.out.println("增加一天后日期:"+sf.format(c.getTime()));
//打印结果
//当前日期：         2013-06-18
//增加一天后日期 ：   2013-06-19




Calendar c = Calendar.getInstance(TimeZone.getTimeZone("GMT+08:00"));    //获取东八区时间

int year = c.get(Calendar.YEAR);    //获取年   
int month = c.get(Calendar.MONTH) + 1;   //获取月份，0表示1月份   
int day = c.get(Calendar.DAY_OF_MONTH);    //获取当前天数   
int first = c.getActualMinimum(c.DAY_OF_MONTH);    //获取本月最小天数   
int last = c.getActualMaximum(c.DAY_OF_MONTH);    //获取本月最大天数   
int time = c.get(Calendar.HOUR_OF_DAY);       //获取当前小时   
int min = c.get(Calendar.MINUTE);          //获取当前分钟   
int xx = c.get(Calendar.SECOND);          //获取当前秒

 

SimpleDateFormat s=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
String curDate = s.format(c.getTime());  //当前日期   
System.out.println("当前时间："+year + "-" + month + "-"+ day + " "+time + ":" + min +":" + xx);   
System.out.println("第一天和最后天：" + first +"," + last);
System.out.println("当前日期curDate====：" + curDate);





c.add(Calendar.YEAR, 1);   
c.add(Calendar.MONTH, 1);   
c.add(Calendar.DAY_OF_MONTH, 1);  
int year2 = c.get(Calendar.YEAR);   
int month2 = c.get(Calendar.MONTH) + 1;   
int day2 = c.get(Calendar.DAY_OF_MONTH);  
int firstD = c.getActualMinimum(c.DAY_OF_MONTH);   
int lastD = c.getActualMaximum(c.DAY_OF_MONTH);   
System.out.println("当前时间："+year2 + "-" + month2 + "-"+ day2 + " "+time + ":" + min +":" + xx);   
System.out.println("第一天和最后天：" + firstD +"," + lastD);



Calendar c=Calendar.getInstance();
c.add(Calendar.MONTH, -1);//上个月
SimpleDateFormat s=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
String year=String.valueOf(c.get(Calendar.YEAR));
String topDay = String.valueOf(c.getActualMinimum(Calendar.DAY_OF_MONTH));
String lastDay = String.valueOf(c.getActualMaximum(Calendar.DAY_OF_MONTH)); 

//上个月
String lastMonth=String.valueOf(c.get(Calendar.MONTH)+1).length()==2?String.valueOf(c.get(Calendar.MONTH)+1):"0"+String.valueOf(c.get(Calendar.MONTH)+1);
String topDayMonth=year+"-"+lastMonth+"-"+"01" + " 00:00:00";
String lastDayMonth = year+"-"+lastMonth+"-"+lastDay+ " 23:59:59";
System.out.println("###year:" + year);
System.out.println("###last month:" + lastMonth);
System.out.println("###topday:" + topDayMonth);
System.out.println("###lastday:" + lastDayMonth);




import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateTest {
    public static Date geLastWeekMonday(Date date) {
        Calendar cal = Calendar.getInstance();
        cal.setTime(getThisWeekMonday(date));
        cal.add(Calendar.DATE, -7);
        return cal.getTime();
    }

    public static Date getThisWeekMonday(Date date) {
        Calendar cal = Calendar.getInstance();
        cal.setTime(date);
        // 获得当前日期是一个星期的第几天
        int dayWeek = cal.get(Calendar.DAY_OF_WEEK);
        if (1 == dayWeek) {
            cal.add(Calendar.DAY_OF_MONTH, -1);
        }
        // 设置一个星期的第一天，按中国的习惯一个星期的第一天是星期一
        cal.setFirstDayOfWeek(Calendar.MONDAY);
        // 获得当前日期是一个星期的第几天
        int day = cal.get(Calendar.DAY_OF_WEEK);
        // 根据日历的规则，给当前日期减去星期几与一个星期第一天的差值
        cal.add(Calendar.DATE, cal.getFirstDayOfWeek() - day);
        return cal.getTime();
    }

    public static Date getNextWeekMonday(Date date) {
        Calendar cal = Calendar.getInstance();
        cal.setTime(getThisWeekMonday(date));
        cal.add(Calendar.DATE, 7);
        return cal.getTime();
    }

    public static void main(String[] args) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date date = sdf.parse("2017-09-10");
            System.out.println("今天是" + sdf.format(date));
            System.out.println("上周一" + sdf.format(geLastWeekMonday(date)));
            System.out.println("本周一" + sdf.format(getThisWeekMonday(date)));
            System.out.println("下周一" + sdf.format(getNextWeekMonday(date)));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}



